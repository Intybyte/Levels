loom {
    forge {
        mixinConfig "levels.mixins.json"
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

def forge_version = "1.20.1-47.4.6"
def architectury_api_version = "9.2.14"

dependencies {
    forge "net.minecraftforge:forge:$forge_version"

    modImplementation "dev.architectury:architectury-forge:$architectury_api_version"

    common(project(path: ':architectury-1.20.1:common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':architectury-1.20.1:common', configuration: 'transformProductionForge')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/mods.toml') {
        expand version: project.version
        expand authors: authors
        expand license: license
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}
